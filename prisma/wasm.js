
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  admin: 'admin',
  name: 'name',
  email: 'email',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ownerId: 'ownerId'
};

exports.Prisma.TopicScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QuestionRequestTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  promptTemplate: 'promptTemplate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  parameters: 'parameters',
  ownerId: 'ownerId'
};

exports.Prisma.QuestionRequestScalarFieldEnum = {
  id: 'id',
  parameterValues: 'parameterValues',
  createdAt: 'createdAt',
  templateId: 'templateId',
  userId: 'userId'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  content: 'content',
  correctAnswerIndex: 'correctAnswerIndex',
  alternatives: 'alternatives',
  requestId: 'requestId'
};

exports.Prisma.AnswerScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  userId: 'userId',
  answerIndex: 'answerIndex',
  correct: 'correct',
  confidenceLevel: 'confidenceLevel',
  createdAt: 'createdAt',
  flaggedIncorrect: 'flaggedIncorrect',
  flaggedProblematic: 'flaggedProblematic',
  flaggedExcellent: 'flaggedExcellent',
  observation: 'observation'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Group: 'Group',
  Topic: 'Topic',
  QuestionRequestTemplate: 'QuestionRequestTemplate',
  QuestionRequest: 'QuestionRequest',
  Question: 'Question',
  Answer: 'Answer'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "E:\\studies\\tcc 2025.2\\self-test\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "E:\\studies\\tcc 2025.2\\self-test\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../prisma\"\n}\n\ngenerator json {\n  provider = \"prisma-json-types-generator\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  admin     Boolean  @default(false)\n  name      String?\n  email     String   @unique\n  image     String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  groups                   Group[]                   @relation(\"GroupUsers\")\n  ownedGroups              Group[]\n  questionRequestTemplates QuestionRequestTemplate[]\n  questionRequests         QuestionRequest[]\n  answers                  Answer[]\n}\n\nmodel Group {\n  id        Int      @id @default(autoincrement())\n  name      String\n  startDate DateTime\n  endDate   DateTime\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  ownerId Int\n  owner   User   @relation(fields: [ownerId], references: [id])\n  users   User[] @relation(\"GroupUsers\")\n}\n\nmodel Topic {\n  id        Int      @id @default(autoincrement())\n  name      String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel QuestionRequestTemplate {\n  id             Int      @id @default(autoincrement())\n  name           String\n  promptTemplate String\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  /// [QuestionRequestTemplateParameter]\n  parameters     Json[]\n  ownerId        Int\n\n  owner User @relation(fields: [ownerId], references: [id])\n\n  requests QuestionRequest[]\n}\n\nmodel QuestionRequest {\n  id              Int      @id @default(autoincrement())\n  /// [QuestionRequestParameterValue]\n  parameterValues Json[]\n  createdAt       DateTime @default(now())\n\n  templateId Int\n  userId     Int\n\n  user      User                     @relation(fields: [userId], references: [id])\n  template  QuestionRequestTemplate? @relation(fields: [templateId], references: [id])\n  questions Question[]\n}\n\nmodel Question {\n  id                 Int    @id @default(autoincrement())\n  content            String\n  correctAnswerIndex Int\n  /// [MultipleChoiceQuestionAlternative]\n  alternatives       Json[]\n\n  requestId Int\n  request   QuestionRequest @relation(fields: [requestId], references: [id])\n\n  answers Answer[]\n}\n\nmodel Answer {\n  id         Int @id @default(autoincrement())\n  questionId Int\n  userId     Int\n\n  answerIndex     Int\n  correct         Boolean\n  confidenceLevel Int\n  createdAt       DateTime @default(now())\n\n  flaggedIncorrect   Boolean @default(false)\n  flaggedProblematic Boolean @default(false)\n  flaggedExcellent   Boolean @default(false)\n  observation        String  @default(\"\")\n\n  question Question @relation(fields: [questionId], references: [id])\n  user     User     @relation(fields: [userId], references: [id])\n\n  @@index([userId, questionId], name: \"user_question_unique\")\n}\n",
  "inlineSchemaHash": "a967a4fcbb5eff7695fc2a43cd2a7f85c2eda5534e40a95a3d396060a437f999",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"groups\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupUsers\"},{\"name\":\"ownedGroups\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"GroupToUser\"},{\"name\":\"questionRequestTemplates\",\"kind\":\"object\",\"type\":\"QuestionRequestTemplate\",\"relationName\":\"QuestionRequestTemplateToUser\"},{\"name\":\"questionRequests\",\"kind\":\"object\",\"type\":\"QuestionRequest\",\"relationName\":\"QuestionRequestToUser\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"Answer\",\"relationName\":\"AnswerToUser\"}],\"dbName\":null},\"Group\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupToUser\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupUsers\"}],\"dbName\":null},\"Topic\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"QuestionRequestTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promptTemplate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuestionRequestTemplateToUser\"},{\"name\":\"requests\",\"kind\":\"object\",\"type\":\"QuestionRequest\",\"relationName\":\"QuestionRequestToQuestionRequestTemplate\"}],\"dbName\":null},\"QuestionRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parameterValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuestionRequestToUser\"},{\"name\":\"template\",\"kind\":\"object\",\"type\":\"QuestionRequestTemplate\",\"relationName\":\"QuestionRequestToQuestionRequestTemplate\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"QuestionToQuestionRequest\"}],\"dbName\":null},\"Question\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"correctAnswerIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alternatives\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"requestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"request\",\"kind\":\"object\",\"type\":\"QuestionRequest\",\"relationName\":\"QuestionToQuestionRequest\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"Answer\",\"relationName\":\"AnswerToQuestion\"}],\"dbName\":null},\"Answer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"answerIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"correct\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"confidenceLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"flaggedIncorrect\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"flaggedProblematic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"flaggedExcellent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"observation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"AnswerToQuestion\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AnswerToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

